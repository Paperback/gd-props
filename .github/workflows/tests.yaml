name: Crate tests

on:
  pull_request:
    branches:
      - master
      - development
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env: 
      SHORT_SHA: invalid
      GODOT_BASE_URL: http://downloads.tuxfamily.org/godotengine/4.2
      GODOT_BINARY: Godot_v4.2-stable_linux.x86_64
      GODOT_EXPORT_TEMPLATES: Godot_v4.2-stable_export_templates.tpz
      GODOT4_BIN: ""

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get gdext latest commit
        id: gdext_commit
        shell: bash
        run: |
          sha=$(curl -s https://api.github.com/repos/godot-rust/gdext/commits/heads/master | jq -r ".sha")
          echo "SHORT_SHA=${sha:0:10}" >> $GITHUB_ENV

      - name: Download Godot
        shell: bash
        run: |
          curl $GODOT_BASE_URL/$GODOT_BINARY.zip >> godot.zip
          unzip godot.zip && rm godot.zip && chmod +x $GODOT_BINARY
          echo "GODOT4_BIN=$(readlink -f $GODOT_BINARY)" >> $GITHUB_ENV

      - name: Run Rust tests
        run: | 
          GODOT4_BIN=${{ env.GODOT4_BIN }}
          cargo test

      - name: Build tests crate (debug)
        shell: bash
        run: | 
          GODOT4_BIN=${{ env.GODOT4_BIN }}
          cargo build -p tests
        
      - name: Run Godot integration tests (debug)
        shell: bash
        run: ${{ env.GODOT4_BIN }} --headless --path tests/godot res://dev_test.tscn

      - name: Export godot project (debug)
        uses: firebelley/godot-export@v5.2.1
        with:
          godot_executable_download_url: ${{ env.GODOT_BASE_URL }}/${{ env.GODOT_BINARY }}.zip
          godot_export_templates_download_url: ${{ env.GODOT_BASE_URL }}/${{ env.GODOT_EXPORT_TEMPLATES }}
          relative_project_path: ./tests/godot
          cache: true
          relative_export_path: ./
          export_debug: true

      - name: Run Godot integration tests (debug-export)
        shell: bash
        run: ./LinuxHeadless/test_headless.x86_64

      - if: github.ref == 'refs/heads/master'
        name: gdext Commit badge
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: gdext_latest_success
          label: 'Latest compatible gdext'
          status: ${{ env.SHORT_SHA }}
          color: 148f07
          github_token: ${{ secrets.GITHUB_TOKEN }}
